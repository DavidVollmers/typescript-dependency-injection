{
  "name": "@dvolper/tsdi",
  "version": "0.6.2",
  "description": "TypeScript Dependency Injection",
  "main": "./dist/cjs/index.js",
  "module": "./dist/es6/index.js",
  "types": "./dist/es6/index.d.ts",
  "keywords": [
    "dependency-injection",
    "dependencies",
    "dependency",
    "typescript",
    "ts",
    "vue",
    "vuejs"
  ],
  "author": "David Vollmers <tsdi@dvolper.xyz>",
  "homepage": "https://github.com/DavidVollmers/typescript-dependency-injection",
  "license": "MIT",
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "dist",
    "docs",
    "lib",
    "LICENSE",
    "README.md"
  ],
  "scripts": {
    "clean:cjs": "rimraf dist/cjs",
    "clean:es6": "rimraf dist/es6",
    "clean:docs": "rimraf docs",
    "build:cjs": "tsc -p tsconfig.cjs.json",
    "build:es6": "tsc -p tsconfig.es6.json",
    "build:docs": "typedoc --ignoreCompilerErrors --theme markdown --tsconfig tsconfig.docs.json --out docs lib",
    "rebuild:docs": "npm-run-all clean:docs build:docs",
    "rebuild:cjs": "npm-run-all clean:cjs build:cjs",
    "rebuild:es6": "npm-run-all clean:es6 build:es6",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "publish:version": "npm version patch --no-git-tag-version",
    "prepublishOnly": "npm-run-all test rebuild:cjs rebuild:es6 rebuild:docs publish:version"
  },
  "peerDependencies": {
    "reflect-metadata": "^0.1.13"
  },
  "devDependencies": {
    "@types/jest": "25.2.3",
    "jest": "26.0.1",
    "reflect-metadata": "^0.1.13",
    "ts-jest": "26.1.0",
    "ts-node": "^8.6.2",
    "tsconfig-paths": "^3.9.0",
    "typedoc": "^0.17.7",
    "typedoc-plugin-markdown": "^2.3.1",
    "typescript": "^3.9.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "lib/**/*.ts"
    ],
    "testEnvironment": "node"
  }
}
